// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract HelloWorld {
    struct Tea{
        address owner;
        string typee;
        string name;
        string price;
        string size;
        string image;
        string bg_image;
        string shop_image;
        string discribe;
        string counter;
        address[] buyers;
        uint256[] buys;
    }

    struct Extra{
        address owner;
        string typee;
        string name;
        string price;
        string size;
        string image;
        string shop_image;
        string discribe;
        string counter;
        address[] buyers;
        uint256[] buys;
    }

    mapping(uint256 => Tea) public Teas;
    mapping(uint256 => Extras) public Extras;

    uint256 public numberOfTeas = 0;
    uint256 public numberOfExtras = 0;

    function createTea(address _owner, string memory _typee, string memory _name, string memory _price, string memory _size, string memory _image, string memory, string memory _discribe, string memory _counter) public returns(uint256) {
        Tea storage tea = Teas[numberOfTeas];

        tea.owner = address(this);

    }

    function createExtra() {

    }

    function buyTea() {

    }

    function buyExtra() {

    }

    function getTeaBuyers() {

    }

    function getExtraBuyers() {

    }
    
    function getTeas() {

    }
    function getExtras() {

    }


    // Tea tea = Tea('Classic','Earl Grey','6.00','200','');
}